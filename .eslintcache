[{"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\index.js":"1","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\App.js":"2","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\reportWebVitals.js":"3","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\InfoBox.js":"4","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Map.js":"5","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Table.js":"6","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\util.js":"7","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\LineGraph.js":"8","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Practice.jsx":"9","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\ChangeView.js":"10"},{"size":468,"mtime":1609412905844,"results":"11","hashOfConfig":"12"},{"size":4239,"mtime":1609498616845,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":810,"mtime":1609455998971,"results":"15","hashOfConfig":"12"},{"size":737,"mtime":1609449628221,"results":"16","hashOfConfig":"12"},{"size":452,"mtime":1609446564384,"results":"17","hashOfConfig":"12"},{"size":1899,"mtime":1609453735414,"results":"18","hashOfConfig":"12"},{"size":2355,"mtime":1609456468251,"results":"19","hashOfConfig":"12"},{"size":697,"mtime":1609274528971,"results":"20","hashOfConfig":"12"},{"size":192,"mtime":1609448178152,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"m80vgz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\index.js",[],["46","47"],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\App.js",["48"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport {\n  FormControl,\n  Select,\n  MenuItem,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\n\n\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport Practice from \"./Practice\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app_header\">\n          <h1>COVID-19 Tracker</h1>\n          <FormControl>\n            <Select\n              onChange={onCountryChange}\n              variant=\"outlined\"\n              value={country}\n            >\n              <MenuItem value={country}>{country}</MenuItem>\n              {countries.map((country, i) => {\n                return (\n                  <MenuItem key={i} value={country.name}>\n                    {country.name}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n          />\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n\n        {/* Map */}\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 style={{ paddingTop: \"20px\" }}>Worldwide new {casesType}</h3>\n        </CardContent>\n        <LineGraph className=\"app__graph\" casesType={casesType} />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\reportWebVitals.js",[],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\InfoBox.js",[],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Map.js",["49"],"import React, { useState } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport ChangeView from \"./ChangeView\";\r\nimport \"./Map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom} scrollWheelZoom={false}>\r\n        <ChangeView center={center} zoom={zoom} />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Table.js",[],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\util.js",[],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\LineGraph.js",[],"C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\Practice.jsx",["50"],"import React from \"react\";\r\nimport { Line, Bubble } from \"react-chartjs-2\";\r\n\r\nfunction Practice() {\r\n  return (\r\n    <div>\r\n      <Line\r\n        data={{\r\n          labels: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n          ],\r\n          datasets: [\r\n            {\r\n              label: \"Covid\",\r\n              backgroundColor: \"lightgray\",\r\n              borderColor: \"gray\",\r\n              data: [50, 10, 5, 200, 20, 30, 45],\r\n            },\r\n          ],\r\n        }}\r\n        options={{ maintainAspectRatio: false }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Practice;\r\n","C:\\Users\\MiaN ShAkiR\\Desktop\\React\\covid-19\\src\\ChangeView.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":18,"column":8,"nodeType":"57","messageId":"58","endLine":18,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"60","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Practice' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Bubble' is defined but never used.","no-global-assign","no-unsafe-negation"]